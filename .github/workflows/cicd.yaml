name: Build and Deploy with BuildKit Rootless

on:
  push:
    branches:
      - devops

env:
  IMAGE_NAME_DOCKER: ${{ secrets.DOCKER_USERNAME }}/demo-app
  IMAGE_NAME_GHCR: ${{ vars.GHCR_REGISTRY}}
  IMAGE_NAME_GITLAB: ${{ vars.GITLAB_REGISTRY }}
  IMAGE_TAG: ${{ github.sha }}

jobs:
  checkout:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - id: set-ref
        run: echo "ref=${GITHUB_SHA}" >> $GITHUB_OUTPUT
        
  build-and-push:
    runs-on: ubuntu-latest
    needs: checkout
    outputs:
      image_digest: ${{ steps.build.outputs.digest }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ needs.checkout.outputs.ref }}

      # Write Dockerfile from secret
      - name: Create Dockerfile
        run: echo "${{ secrets.DOCKERFILE_DEMO_APP }}" | base64 -d > Dockerfile

      # Set up Buildx (rootless BuildKit)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true
          driver-opts: image=moby/buildkit:rootless

      # Authenticate to Docker Hub
      - name: Docker Hub login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Authenticate in to GHCR
      - name: GHCR login
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USER }}
          password: ${{ secrets.GHCR_TOKEN }}

      # Authenticate to GitLab Registry
      - name: GitLab login
        uses: docker/login-action@v3
        with:
          registry: registry.gitlab.com
          username: ${{ secrets.GITLAB_USER }}
          password: ${{ secrets.GITLAB_TOKEN }}

      # Push image to all registries
      - name: Build and push images
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ env.IMAGE_NAME_DOCKER }}:${{ env.IMAGE_TAG }}
            ${{ env.IMAGE_NAME_GHCR }}:${{ env.IMAGE_TAG }}
            ${{ env.IMAGE_NAME_GITLAB }}:${{ env.IMAGE_TAG }}
  
#Deploy to Kubernetes cluster
  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Create k8s folder
        run: mkdir -p k8s

      - name: Create deployment.yaml from secret
        run: echo "${{ secrets.DEPLOYMENT_FILE }}" | base64 -d > k8s/deployment.yaml

      - name: Create service.yaml from secret
        run: echo "${{ secrets.SERVICE_FILE }}" | base64 -d > k8s/service.yaml

      - name: Apply Kubernetes manifests
        run: |
          echo "${{ secrets.K8S_CONFIG }}" | base64 -d > k8s/kubeconfig
          kubectl --kubeconfig=k8s/kubeconfig apply -f k8s/ -n demo-app-ns
          kubectl --kubeconfig=k8s/kubeconfig rollout status deployment/demo-app -n demo-app-ns
